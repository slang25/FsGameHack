{
  "name": "fable-core",
  "version": "0.6.3",
  "description": "Fable core lib & bindings for native JS objects, browser and node APIs",
  "main": "fable-core.js",
  "typings": "fable-core.d.ts",
  "scripts": {
    "tsc": "tsc",
    "babel": "babel",
    "uglifyjs": "uglifyjs"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fable-compiler/Fable/import/core"
  },
  "license": "Apache-2.0",
  "author": {
    "name": "Alfonso Garcia-Caro"
  },
  "keywords": [
    "fable",
    "fable-compiler",
    "fsharp",
    "F#"
  ],
  "homepage": "https://github.com/fable-compiler/Fable#readme",
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-plugin-transform-es2015-classes": "^6.9.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.10.3",
    "babel-plugin-transform-es2015-modules-umd": "^6.8.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2015-no-commonjs": "0.0.2",
    "typescript": "^1.8.10",
    "uglify-js": "^2.7.0"
  },
  "readme": "# fable-core\n\nFable core lib and bindings for native JS objects, browser and node APIs\n\n[![npm](https://img.shields.io/npm/v/fable-core.svg)](https://www.npmjs.com/package/fable-compiler) [![Join the chat at https://gitter.im/fable-compiler/Fable](https://badges.gitter.im/fable-compiler/Fable.svg)](https://gitter.im/fable-compiler/Fable?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[RELEASE NOTES](https://github.com/fable-compiler/Fable/blob/master/RELEASE_NOTES_CORE.md) Â· [Follow us on Twitter!](https://twitter.com/FableCompiler)\n\n## Installation\n\n```sh\nnpm install --save fable-core\n```\n\n## Usage\n\nFor general information on how to use Fable, check the [docs](http://fable-compiler.github.io/docs/compiling.html).\n\nThe default file when you import `fable-core` uses universal modules (UMD)\nwhich can be understood by node (commonjs) or require.js (amd). There's also\na minified version `fable-core.min.js`, and if you need the library in other\nmodule formats you can import `fable-core/es2015` or `fable-core/commonjs` instead.\n\n### F# project (.fsproj)\n\n```xml\n  <ItemGroup>\n    <Reference Include=\"node_modules/fable-core/Fable.Core.dll\" />\n  </ItemGroup>\n```\n\n### F# script (.fsx)\n\n```fsharp\n#r \"node_modules/fable-core/Fable.Core.dll\"\n\nopen Fable.Core\nopen Fable.Import\n```\n\n### require.js\n\nWhen targeting the browser and using AMD instead of a module bundler,\nyou can load Fable's core lib with [require.js](http://requirejs.org) as follows:\n\n```html\n<script src=\"node_modules/requirejs/require.js\"></script>\n<script>\nrequirejs.config({\n    // Set the baseUrl to the path of the compiled JS code\n    baseUrl: 'out',\n    paths: {\n        // Explicit path to core lib (relative to baseUrl, omit .js)\n        'fable-core': '../node_modules/fable-core/fable-core.min'\n    }\n});\n// Load the entry file of the app (use array, omit .js)\nrequirejs([\"app\"]);\n</script>\n```\n\n## Development\n\nThe source is written in TypeScript. The use of a TypeScript-aware editor\n(like [VSCode](https://code.visualstudio.com) or [ALM](http://alm.tools/))\nis highly recommended.\n\nOutput files are generated as shown below:\n\n- `fable-core.ts` (source)\n  - `es2015.js` (Created from `fable-core.ts |> tsc --target ES2015`)\n    - `fable-core.js` (Created from `es2015.js |> babel --plugins ...umd`)\n      - `fable-core.min.js` (Created from `fable-core.js |> uglifyjs`)\n    - `commonjs.js` (Created from `es2015.js |> babel --plugins ...commonjs`)\n\n### To build\n\nFrom Fable root project folder, simply run:\n\n```sh\nbuild FableCore\n```\n",
  "readmeFilename": "README.md",
  "_id": "fable-core@0.6.3",
  "_shasum": "977d682a54b093fd516f6963de334d239c3a236a",
  "_from": "fable-core@^0.6.1",
  "_resolved": "http://registry.npmjs.org/fable-core/-/fable-core-0.6.3.tgz"
}
